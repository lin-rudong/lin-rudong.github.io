<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>MyBatis面试</title>
      <link href="/2018/10/08/MyBatis%E9%9D%A2%E8%AF%95/"/>
      <url>/2018/10/08/MyBatis%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="MyBatis如何防止注入？"><a href="#MyBatis如何防止注入？" class="headerlink" title="MyBatis如何防止注入？"></a>MyBatis如何防止注入？</h1><ul><li>#{}是预编译处理，${}是字符串替换。</li><li>#{}可以防止SQL注入。</li></ul><h1 id="类的属性和表的字段不一样？"><a href="#类的属性和表的字段不一样？" class="headerlink" title="类的属性和表的字段不一样？"></a>类的属性和表的字段不一样？</h1><ol><li>定义字段的别名为属性名。</li><li>映射属性名和字段名。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;resultMap id=&quot;&quot; type=&quot;&quot;&gt;</span><br><span class="line">    &lt;id property=&quot;&quot; column=&quot;&quot;/&gt;</span><br><span class="line">    &lt;result property=&quot;&quot; column=&quot;&quot;/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure></li></ol><h1 id="获取自动生成的键值？"><a href="#获取自动生成的键值？" class="headerlink" title="获取自动生成的键值？"></a>获取自动生成的键值？</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;insert id=&quot;&quot; parameterType=&quot;&quot;&gt;</span><br><span class="line">    &lt;selectKey keyProperty=&quot;id&quot; order=&quot;AFTER&quot; resultType=&quot;int&quot;&gt;</span><br><span class="line">        select last_insert_id()</span><br><span class="line">    &lt;/selectKey&gt;</span><br><span class="line">    insert into...</span><br><span class="line">&lt;/insert&gt;</span><br></pre></td></tr></table></figure><h1 id="在mapper中传递多个参数？"><a href="#在mapper中传递多个参数？" class="headerlink" title="在mapper中传递多个参数？"></a>在mapper中传递多个参数？</h1><ol><li>使用占位符<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;&quot; resultMap=&quot;&quot;&gt;</span><br><span class="line">    select * from t where id=#&#123;0&#125; and name=#&#123;1&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public T f(@param(&quot;id&quot;) Integer id,@param(&quot;name&quot;) String name);</span><br><span class="line"></span><br><span class="line">&lt;select id=&quot;f&quot; resultType=&quot;T&quot;&gt;</span><br><span class="line">    select * from t where id=#&#123;id&#125; and name=#&#123;name&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用Map集合参数</li><li>使用Bean参数</li></ol><h1 id="动态标签？"><a href="#动态标签？" class="headerlink" title="动态标签？"></a>动态标签？</h1><ul><li>在Xml映射文件内，已标签的形式编写动态SQL，完成逻辑判断和动态拼接SQL的功能。</li><li>9种标签：<ol><li>trim</li><li>where</li><li>set</li><li>foreach</li><li>if</li><li>choose</li><li>when</li><li>otherwise</li><li>bind</li></ol></li><li>原理：使用OGNL（Object-Graph Navigation Languag）计算表达式，根据表达式的值动态拼接SQL。</li></ul><h1 id="MyBatis不同的Xml映射文件中，id重复？"><a href="#MyBatis不同的Xml映射文件中，id重复？" class="headerlink" title="MyBatis不同的Xml映射文件中，id重复？"></a>MyBatis不同的Xml映射文件中，id重复？</h1><ul><li>定位=namespace+id</li><li>如果有namespace可以重复，如果没有配置namespace会导致覆盖。</li></ul><h1 id="MyBatis是半自动的ORM映射工具？"><a href="#MyBatis是半自动的ORM映射工具？" class="headerlink" title="MyBatis是半自动的ORM映射工具？"></a>MyBatis是半自动的ORM映射工具？</h1><ul><li>Hibernate是全自动ORM映射工具，查询关联对象或关联集合对象时，可以根据对象关系模型直接获取。</li><li>MyBatis则需要手动编写SQL。</li></ul><h1 id="一个Xml映射文件，需要一个Dao接口对应？Dao接口的方法能重载吗？"><a href="#一个Xml映射文件，需要一个Dao接口对应？Dao接口的方法能重载吗？" class="headerlink" title="一个Xml映射文件，需要一个Dao接口对应？Dao接口的方法能重载吗？"></a>一个Xml映射文件，需要一个Dao接口对应？Dao接口的方法能重载吗？</h1><ul><li>Dao接口，即Mapper接口，接口的全限名就是namespace，接口的方法名就是id，接口的参数就是传递给SQL的参数。</li><li>Mapper接口没有实现类，当调用接口方法时，会定位一个MappedStatement。</li><li>Dao接口里的方法不能重载。</li><li>Dao接口的工作原理：JDK动态代理，MyBatis运行时会使用JDK动态代理为Dao接口生成代理proxy对象，代理对象proxy会拦截接口方法，转而执行MappedStatement所代表的SQL。</li></ul><h1 id="接口绑定的实现方式？"><a href="#接口绑定的实现方式？" class="headerlink" title="接口绑定的实现方式？"></a>接口绑定的实现方式？</h1><ol><li>注解绑定</li><li>Xml绑定</li></ol><h1 id="MyBatis是如何分页的？分页插件的原理是什么？"><a href="#MyBatis是如何分页的？分页插件的原理是什么？" class="headerlink" title="MyBatis是如何分页的？分页插件的原理是什么？"></a>MyBatis是如何分页的？分页插件的原理是什么？</h1><ul><li>MyBatis使用RowBounds对象进行分页，RowBounds是针对ResultSet执行的内存分页，而非物理分页。</li><li>可以用SQL实现物理分页，也可以使用分页插件完成物理分页。</li><li>分页插件的基本原理:插件的拦截方法内拦截待执行的SQL，然后重写SQL，添加物理分页语句和物理分页参数。</li></ul><h1 id="MyBatis插件运行原理？"><a href="#MyBatis插件运行原理？" class="headerlink" title="MyBatis插件运行原理？"></a>MyBatis插件运行原理？</h1><ul><li>MyBatis仅可以编写针对ParameterHandler、ResultSetHandler、StatementHandler和Executor这4种接口的插件，MyBatis使用JDK的动态代理，为需要拦截的接口生成代理对象以实现接口方法拦截功能。</li></ul><h1 id="MyBatis延迟加载的实现原理？"><a href="#MyBatis延迟加载的实现原理？" class="headerlink" title="MyBatis延迟加载的实现原理？"></a>MyBatis延迟加载的实现原理？</h1><ul><li>MyBatis仅支持association和collection关联集合对象的延迟加载。</li><li>原理：使用cglib创建目标对象的代理对象，当调用目标方法时，进入拦截器方法，如果当拦截器方法发现字段是null值，就会单独发送事先保存好的查询，然后保存到对象的字段中。</li></ul><h1 id="MyBatis的Executor执行器？"><a href="#MyBatis的Executor执行器？" class="headerlink" title="MyBatis的Executor执行器？"></a>MyBatis的Executor执行器？</h1><ul><li>SimpleExecutor、ReuseExecutor和BatchExecutor</li></ul><ol><li>SimpleExecutor：每次执行一次update或select，开启一个Statement对象，用完立刻关闭Statement对象。</li><li>ReuseExecutor：执行update或select，以SQL作为key查找Statement对象，存在直接使用，不存在则创建，不关闭Statement对象而是在Map&lt;String,Statement&gt;内重复使用。</li><li>BatchExecutor：执行update（JDBC批处理不支持select），将sql添加到批处理中，等待统一执行executeBatch()。</li></ol>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JDK8新特性</title>
      <link href="/2018/10/07/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/"/>
      <url>/2018/10/07/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Java语言"><a href="#Java语言" class="headerlink" title="Java语言"></a>Java语言</h1><h2 id="Lambda表达式与Functional接口"><a href="#Lambda表达式与Functional接口" class="headerlink" title="Lambda表达式与Functional接口"></a>Lambda表达式与Functional接口</h2><ul><li>访问局部变量时，会将变量隐式转换成常量。</li><li>接口的静态方法和默认方法不影响函数式接口。</li><li>@<em>FunctionalInterface</em>。</li></ul><h2 id="方法引用"><a href="#方法引用" class="headerlink" title="方法引用"></a>方法引用</h2><ul><li>方法引用用来支持Lambda简写。</li><li>构造器引用<em>T::new</em>，构造器本质上静态方法。</li><li>静态方法引用<em>T::staticMethod</em>。</li><li>类的任意对象的方法引用<em>T::Method</em>，第一个参数是对象。</li><li>对象的方法引用<em>O::Method</em>。</li></ul><h2 id="接口的静态方法与默认方法"><a href="#接口的静态方法与默认方法" class="headerlink" title="接口的静态方法与默认方法"></a>接口的静态方法与默认方法</h2><ul><li>接口的字段是<em>public static final</em>,接口的方法是<em>public</em>。</li><li>接口的方法新增<em>static</em>与<em>default</em>。</li></ul><h2 id="类型推测机制"><a href="#类型推测机制" class="headerlink" title="类型推测机制"></a>类型推测机制</h2><ul><li>List<t> list=new List&lt;&gt;();</t></li></ul><h2 id="重复注解"><a href="#重复注解" class="headerlink" title="重复注解"></a>重复注解</h2><ul><li>@R<em>epeatable</em>。</li></ul><h2 id="注解类型"><a href="#注解类型" class="headerlink" title="注解类型"></a>注解类型</h2><ul><li>field、constructor、method、parameter、local_variable、package和type(类、接口和enum)。</li></ul><h1 id="Java编译器"><a href="#Java编译器" class="headerlink" title="Java编译器"></a>Java编译器</h1><h2 id="参数名字"><a href="#参数名字" class="headerlink" title="参数名字"></a>参数名字</h2><ul><li>参数名字保存在Java字节码中，<em>javac -parameters</em>。</li></ul><h2 id="Java类库"><a href="#Java类库" class="headerlink" title="Java类库"></a>Java类库</h2><h2 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h2><ul><li>集合函数式编程</li></ul><h2 id="并行数组"><a href="#并行数组" class="headerlink" title="并行数组"></a>并行数组</h2><ul><li>数组并行处理。</li></ul><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><ul><li>ConcurrentHashMap。<ol><li><em>取消段segments</em>，采用transient volatile hashEntry保存数据，实现<em>对每一行数据进行加锁</em>代替原来的段加锁，减少并发冲突。</li><li>数据结构改为<em>数组+单向链表+红黑树</em>。</li></ol></li><li>ForkJoinPool支持共有资源池。</li><li>容量锁StampedLock，代替ReadWriteLock。</li><li>atomic增加：<ol><li>DoubleAccumulator</li><li>DoubleAdder</li><li>LongAccumulator</li><li>LongAdder</li></ol></li></ul><h2 id="Optional"><a href="#Optional" class="headerlink" title="Optional"></a>Optional</h2><h2 id="Date-Time-API"><a href="#Date-Time-API" class="headerlink" title="Date/Time API"></a>Date/Time API</h2><ol><li>Clock</li></ol><ul><li>替换System.currentTimeMillis()和TimeZone.getDefault()。</li></ul><ol start="2"><li>LocaleDate LocalTime LocalDateTime</li></ol><ul><li>无时区。</li></ul><ol start="3"><li>ZonedDateTIme</li><li>Duration</li></ol><ul><li>时间差</li></ul><h2 id="JS引擎"><a href="#JS引擎" class="headerlink" title="JS引擎"></a>JS引擎</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ScriptEngineManager manager = new ScriptEngineManager();</span><br><span class="line">ScriptEngine engine = manager.getEngineByName( &quot;JavaScript&quot; );</span><br><span class="line">engine.eval( &quot;function f() &#123; return 1; &#125;; f() + 1;&quot; );</span><br></pre></td></tr></table></figure><h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><ul><li>编码。</li></ul><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h2 id="元空间Metaspace代替永久代PermGen"><a href="#元空间Metaspace代替永久代PermGen" class="headerlink" title="元空间Metaspace代替永久代PermGen"></a>元空间Metaspace代替永久代PermGen</h2><ul><li>字符串和静态变量转移到Java堆。</li><li>元空间使用本地内存而不在JVM中，元空间受本地内存限制，可以用-XX:MetaspaceSize -XX:MaxMetaspaceSize限制。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK8 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/10/07/hello-world/"/>
      <url>/2018/10/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <link href="/googlea5bf63acdc3dbd82.html"/>
      <url>/googlea5bf63acdc3dbd82.html</url>
      
        <content type="html"><![CDATA[google-site-verification: googlea5bf63acdc3dbd82.html]]></content>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/baidu_verify_FiXvtI1EbL.html"/>
      <url>/baidu_verify_FiXvtI1EbL.html</url>
      
        <content type="html"><![CDATA[FiXvtI1EbL]]></content>
      
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
  
</search>
